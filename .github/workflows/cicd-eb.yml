name: CI/CD — Docker Hub → Elastic Beanstalk

on:
  push:
    branches: ["main"]
  workflow_dispatch: 
    inputs:
        version:
          description: "Release version (e.g., v1.0.2)"
          required: true

env:
  IMAGE_NAME: ${{ vars.DOCKERHUB_USERNAME }}/sl-edu-service
  AWS_REGION: us-east-1
  EB_APP: sl-edu-service
  EB_ENV: Sl-edu-service-env
  EB_BUCKET: elasticbeanstalk-us-east-1-541798465384
  VERSION: ${{ github.event.inputs.version }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    concurrency:
      group: eb-deploy
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up QEMU (multi-arch)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Compute image tag
        id: meta
        run: echo "TAG=${GITHUB_SHA::7}-${GITHUB_RUN_NUMBER}" >> "$GITHUB_OUTPUT"

      - name: Build & push (linux/amd64, linux/arm64)
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.IMAGE_NAME }}:${{ env.VERSION }}
            ${{ env.IMAGE_NAME }}:latest

      - name: Render Dockerrun.aws.json
        run: |
          cat > Dockerrun.aws.json << 'EOF'
          {
            "AWSEBDockerrunVersion": "1",
            "Image": { "Name": "${{ env.IMAGE_NAME }}:${{ env.VERSION }}", "Update": "true" },
            "Ports": [{ "ContainerPort": 8080 }]
          }
          EOF
          zip deploy.zip Dockerrun.aws.json

      - name: Configure AWS credentials (access keys)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy to Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v22
        with:
          application_name: ${{ env.EB_APP }}
          environment_name: ${{ env.EB_ENV }}
          region: ${{ env.AWS_REGION }}
          version_label: ${{ env.VERSION }}
          deployment_package: deploy.zip
          existing_bucket_name: ${{ env.EB_BUCKET }}
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          use_existing_version_if_available: true
